---
// Theme toggle component
---

<button id="theme-toggle" type="button" aria-label="Toggle theme">
	<span id="theme-toggle-light-icon" class="theme-icon">
		<!-- Sun icon for light mode -->
		<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
			<circle cx="12" cy="12" r="5"></circle>
			<line x1="12" y1="1" x2="12" y2="3"></line>
			<line x1="12" y1="21" x2="12" y2="23"></line>
			<line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
			<line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
			<line x1="1" y1="12" x2="3" y2="12"></line>
			<line x1="21" y1="12" x2="23" y2="12"></line>
			<line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
			<line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
		</svg>
	</span>
	<span id="theme-toggle-dark-icon" class="theme-icon">
		<!-- Moon icon for dark mode -->
		<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
			<path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
		</svg>
	</span>
</button>

<style>
	#theme-toggle {
		background: none;
		border: 2px solid rgb(var(--gray));
		border-radius: 50%;
		width: 44px;
		height: 44px;
		display: flex;
		align-items: center;
		justify-content: center;
		cursor: pointer;
		transition: all 0.3s ease;
		color: rgb(var(--gray-dark));
	}

	#theme-toggle:hover {
		border-color: var(--accent);
		color: var(--accent);
		transform: scale(1.1);
	}

	.theme-icon {
		display: none;
		align-items: center;
		justify-content: center;
	}

	.theme-icon.active {
		display: flex;
	}

	#theme-toggle:focus {
		outline: 2px solid var(--accent);
		outline-offset: 2px;
	}
</style>

<script is:inline>
	// Theme toggle functionality
	function initThemeToggle() {
		const themeToggle = document.getElementById('theme-toggle');
		const lightIcon = document.getElementById('theme-toggle-light-icon');
		const darkIcon = document.getElementById('theme-toggle-dark-icon');
		
		if (!themeToggle || !lightIcon || !darkIcon) {
			console.log('Theme toggle elements not found');
			return;
		}

		// Get initial theme from localStorage or default to light
		const currentTheme = localStorage.getItem('theme') || 'light';
		
		// Apply initial theme
		document.documentElement.setAttribute('data-theme', currentTheme);
		updateIcons(currentTheme);

		// Toggle theme function
		function toggleTheme() {
			console.log('Toggle theme clicked');
			const currentTheme = document.documentElement.getAttribute('data-theme') || 'light';
			const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
			
			console.log('Switching from', currentTheme, 'to', newTheme);
			
			document.documentElement.setAttribute('data-theme', newTheme);
			localStorage.setItem('theme', newTheme);
			updateIcons(newTheme);
		}

		// Update icon visibility
		function updateIcons(theme) {
			if (!lightIcon || !darkIcon) return;
			
			lightIcon.classList.remove('active');
			darkIcon.classList.remove('active');
			
			if (theme === 'dark') {
				lightIcon.classList.add('active');
			} else {
				darkIcon.classList.add('active');
			}
			
			console.log('Updated icons for theme:', theme);
		}

		// Add click event listener
		themeToggle.addEventListener('click', toggleTheme);
		console.log('Theme toggle initialized');
	}

	// Initialize on DOM content loaded
	document.addEventListener('DOMContentLoaded', initThemeToggle);

	// Also initialize immediately in case DOMContentLoaded already fired
	if (document.readyState === 'loading') {
		document.addEventListener('DOMContentLoaded', initThemeToggle);
	} else {
		initThemeToggle();
	}
</script>
